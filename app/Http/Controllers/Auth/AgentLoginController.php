<?phpnamespace App\Http\Controllers\Auth;use Illuminate\Http\Request;use App\Http\Controllers\Controller;use Illuminate\Foundation\Auth\AuthenticatesUsers;use Illuminate\Support\Facades\Auth;use Cookie;use App\LoginLog;use App\Admin;class AgentLoginController extends Controller{	use AuthenticatesUsers;    /**     * Where to redirect users after login.     *     * @var string     */    protected $redirectTo = '/agent/dashboard';    /**     * Create a new controller instance.     *     * @return void     */    public function __construct()	{		$this->middleware('guest:agents')->except('logout');	}	protected function credentials(\Illuminate\Http\Request $request)	{			if (filter_var($request->get('email'), FILTER_VALIDATE_EMAIL)) {            return ['email' => $request->get('email'), 'password'=>$request->get('password'), 'status' => 1];          }          return ['username' => $request->get('email'), 'password'=>$request->get('password'), 'status' => 1];	}	protected function guard()	{        return Auth::guard('agents');	}	public function showLoginForm(){		return view('auth.agent-login');	}	public function authenticated(Request $request, $user)	{				if(!empty($request->remember)) {			\Cookie::queue(\Cookie::make('username', $request->email, 3600));			\Cookie::queue(\Cookie::make('password', $request->password, 3600));		} else {			\Cookie::queue(\Cookie::forget('username'));			\Cookie::queue(\Cookie::forget('password'));		}        return redirect()->intended($this->redirectPath());    }	public function logout(Request $request)	{		Auth::guard('agents')->logout();        $request->session()->flush();        $request->session()->regenerate();		return redirect('/agent/login');	}}